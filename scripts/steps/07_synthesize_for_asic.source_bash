. "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")/00_setup.source_bash"

design_dir="$openlane_dir/designs/$lab_name"

mkdir -p  "$design_dir/src"

rm    -rf "$design_dir"/*.tcl      \
          "$design_dir/src"/*.{v,vh,sv,svh}  \
          "$design_dir/src"/*.hex

#-----------------------------------------------------------------------------

cp "$script_dir/asic/"*.tcl "$design_dir"

if [ -f ../asic_config.tcl ] ; then
    cp -f ../asic_config.tcl "$design_dir"/config.tcl
fi

#-----------------------------------------------------------------------------

cp "$script_dir/asic/asic_top.sv" "$design_dir/src"

for f in                      \
    config.svh                \
    counter_with_enable.sv    \
    seven_segment_display.sv  \
    shift_reg.sv              \
    strobe_gen.sv
do
    cp -f "$lab_dir/common/$f" "$design_dir/src"
done

$find_to_run ..                             \
       -type d -name run -prune             \
    -o -type f                              \
    \(                                      \
             -name '*.sv' -not -name tb.sv  \
        -o   -name '*.svh'                  \
        -o   -name '*.v'                    \
        -o   -name '*.vh'                   \
        -o   -name '*.hex'                  \
    \)                                      \
    -print                                  \
    | xargs -I % cp -f % "$design_dir/src"

#-----------------------------------------------------------------------------

rars_assembly

if [ -f program.hex ] ; then
    cp -f program.hex "$design_dir/src"
fi

#-----------------------------------------------------------------------------

pushd "$openlane_dir" &> /dev/null
make quick_run QUICK_RUN_DESIGN=$lab_name |& tee "$log"
popd

#-----------------------------------------------------------------------------

runs_dir="$design_dir/runs"

[ -d "$runs_dir" ] || error "Cannot find OpenLane runs directory"

last_run_dir=$(ls -d "$runs_dir"/RUN* | sort | tail -1)

! [ -z "$last_run_dir" ] || error "No RUN directory"

cp "$log" asic_01_main.log

   cp "$last_run_dir"/results/synthesis/asic_top.v            asic_02_synthesis.v                           \
&& cp "$last_run_dir"/results/placement/asic_top.nl.v         asic_03_placement.nl.v                        \
&& cp "$last_run_dir"/results/routing/asic_top.nl.v           asic_04_routing.nl.v                          \
&& cp "$last_run_dir"/results/final/verilog/gl/asic_top.nl.v  asic_05_final_no_power_grid.nl.v              \
&& cp "$last_run_dir"/results/final/verilog/gl/asic_top.v     asic_06_final.v                               \
&& cp "$last_run_dir"/reports/signoff/31-rcx_sta.max.rpt      asic_07_static_timing_analysis.sta.max.rpt    \
&& cp "$last_run_dir"/reports/signoff/31-rcx_sta.min.rpt      asic_08_static_timing_analysis.sta.min.rpt    \
&& cp "$last_run_dir"/reports/signoff/31-rcx_sta.power.rpt    asic_09_static_timing_analysis.sta.power.rpt  \
&& cp "$last_run_dir"/results/signoff/asic_top.lef            asic_10_library_exchange_format.lef           \
&& cp "$last_run_dir"/results/signoff/asic_top.mag            asic_11_magic.mag                             \
&& cp "$last_run_dir"/results/signoff/asic_top.sdf            asic_12_standard_delay_format.sdf             \
|| error "Cannot copy something"
